<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="notifyIcon1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="notifyIcon1.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAAAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAQAQAAAAAAAAAAAAAAAAAAAAA
        AAD///8B////Af///wH///8B////Af///wEAcv8HAHL/aQBy/5kAcv+hAHL/kQBy/w3///8B////Af//
        /wH///8B////Af///wH///8B////Af///wEAcv9zAHL//wBy/70Acv9vAHL/WQBy/40Acv/R////Af//
        /wH///8B////Af///wH///8B////Af///wEAcv+nAHL//wBy/zH///8B////Af///wEAcv9rAHL/r///
        /wH///8B////Af///wH///8B////Af///wEAcv9RAHL//wBy/yf///8B////Af///wH///8BAHL/6QBy
        /zX///8B////Af///wH///8B////Af///wH///8BAHL/+wBy/4v///8B////Af///wH///8B////AQBy
        //////8B////Af///wH///8B////Af///wH///8BAHL/SQBy//8Acv8F////Af///wH///8B////AQBy
        /0EAcv+VAnL/Ff///wH///8B////Af///wH///8B////AQBy/5EAcv/f////Af///wH///8B////Af//
        /wEAcv+/AHL//wBy/6v///8B////Af///wH///8B////Af///wEAcv+fAHL/r////wH///8B////Af//
        /wH///8BAHL/qwBy//EAcv93AHL//wBy/+X///8B////Af///wH///8BAHL/oQBy/7P///8B////Af//
        /wH///8B////Af///wH///8BAHL/PQBy//8Acv//////Af///wH///8B////AQBy/2sAcv/3////Af//
        /wH///8B////Af///wH///8BAHL/vQBy/1UAcv8PAHL/TwBy/xn///8B////Af///wH///8BAHL//wBy
        /0////8B////Af///wH///8B////AQBy/9cAcv95////AQBy/4kAcv/n////Af///wH///8B////AQBy
        /ykAcv//AHL/cwBy/wP///8B////AQBy/y0Acv/J////Af///wH///8B////Af///wH///8B////Af//
        /wH///8BAHL/BwBy/58Acv//AHL//wBy//8Acv/BAHL/Ff///wH///8B////Af///wH///8B////Af//
        /wEAcv8FAHL/eQBy/6cAcv+bAHL/NwBy/5n///8B////Af///wH///8B////Af///wH///8B////Af//
        /wEAcv8lAHL//wBy//8Acv//AHL/5wBy/x0Acv+Z////Af///wH///8B////Af///wH///8B////Af//
        /wH///8BAHL/iwBy/60Acv+NAHL/U////wEAcv8JAHL/Mf///wH///8B////Af///wH///8B////Af//
        /wH///8BAAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA
        //8AAP//AAD//w==
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAAAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAQAQAAAAAAAAAAAAAAAAAAAAA
        AAD///8B////Af///wH///8B////Af///wEAcv8HAHL/aQBy/5kAcv+hAHL/kQBy/w3///8B////Af//
        /wH///8B////Af///wH///8B////Af///wEAcv9zAHL//wBy/70Acv9vAHL/WQBy/40Acv/R////Af//
        /wH///8B////Af///wH///8B////Af///wEAcv+nAHL//wBy/zH///8B////Af///wEAcv9rAHL/r///
        /wH///8B////Af///wH///8B////Af///wEAcv9RAHL//wBy/yf///8B////Af///wH///8BAHL/6QBy
        /zX///8B////Af///wH///8B////Af///wH///8BAHL/+wBy/4v///8B////Af///wH///8B////AQBy
        //////8B////Af///wH///8B////Af///wH///8BAHL/SQBy//8Acv8F////Af///wH///8B////AQBy
        /0EAcv+VAnL/Ff///wH///8B////Af///wH///8B////AQBy/5EAcv/f////Af///wH///8B////Af//
        /wEAcv+/AHL//wBy/6v///8B////Af///wH///8B////Af///wEAcv+fAHL/r////wH///8B////Af//
        /wH///8BAHL/qwBy//EAcv93AHL//wBy/+X///8B////Af///wH///8BAHL/oQBy/7P///8B////Af//
        /wH///8B////Af///wH///8BAHL/PQBy//8Acv//////Af///wH///8B////AQBy/2sAcv/3////Af//
        /wH///8B////Af///wH///8BAHL/vQBy/1UAcv8PAHL/TwBy/xn///8B////Af///wH///8BAHL//wBy
        /0////8B////Af///wH///8B////AQBy/9cAcv95////AQBy/4kAcv/n////Af///wH///8B////AQBy
        /ykAcv//AHL/cwBy/wP///8B////AQBy/y0Acv/J////Af///wH///8B////Af///wH///8B////Af//
        /wH///8BAHL/BwBy/58Acv//AHL//wBy//8Acv/BAHL/Ff///wH///8B////Af///wH///8B////Af//
        /wEAcv8FAHL/eQBy/6cAcv+bAHL/NwBy/5n///8B////Af///wH///8B////Af///wH///8B////Af//
        /wEAcv8lAHL//wBy//8Acv//AHL/5wBy/x0Acv+Z////Af///wH///8B////Af///wH///8B////Af//
        /wH///8BAHL/iwBy/60Acv+NAHL/U////wEAcv8JAHL/Mf///wH///8B////Af///wH///8B////Af//
        /wH///8BAAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA
        //8AAP//AAD//w==
</value>
  </data>
</root>